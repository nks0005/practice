- Anhyoungbin github:nks0005
- 책 : JAVA의 정석 2en Edition


1. 네트워킹이란?
 두 대 이상의 컴퓨터를 케이블로 연결하여 네트워크(network)를 구성하는 것을 말함. 
 
2. 클라이언트와 서버
 전용 서버를 두는 것을 서버기반모델(server-based)라고 한다.
 서버 : 서비스를 제공하는 컴퓨터
 클라이언트 : 서버의 서비스를 사용하는 컴퓨터
 
 서버의 서비스의 종류에 따라 파일서버, 메일서버, 어플리케이션서버 등이 있다.
 
 클라이언트가 서버의 역할을 동시에 수행하는 모델을 P2P(peer to peer)모델이라고 한다.
 
3. IP 주소
 IP 주소는 컴퓨터를 구별하는데 사용되는 고유한 값
 Subnet Mask로 네트워크주소와 호스트주소를 구분한다. 
 
 JAVA는 IP주소를 다루기 위한 클래스로 InetAddress를 제공한다.
 
 byte[] getAddress() - IP 주소를 byte 배열로 반환
 static InetAddress[] getAllByName(String host) - 도메인명(host)에 지정된 모든 호스트의 IP주소를 배열에 담아 반환한다.
 static InetAddress getByAddress(byte[] addr) - byte배열을 통해 IP주소를 얻는다.
 ...
[Network_ex1.java]


4. URL(Uniform Resource Location)
 URL은 인터넷에 존재하는 여러 서버들이 제공하는 자원에 접근할 수 있는 주소를 표현
 프로토콜://호스트명:포트번호/경로명/파일명?쿼리스트링#참조 의 형태, 포트번호, 쿼리, 참조는 생략 가능
	프로토콜 : 자원에 접근하기 위해 서버와 통신하는데 사용되는 통신규약
	호스트명 : 자원을 제공하는 서버의 이름
	포트번호 : 통신에 사용되는 서버의 포트 번호
	경로명 : 접근하려는 자원이 저장된 서버상의 위치
	파일명 : 접근하려는 자원의 이름
	쿼리(query) : URL에서 '?'이후의 부분
	참조(anchor) : URL에서 '#'이후의 부분
 
 URL(string spec) - 지정된 문자열 정보의 URL객체를 생성한다.
 ...
[Network_ex2.java]

5. URLConnection
 URLConnection은 어플리케이션과 URL간의 통신 연결을 나타내는 클래스의 최상위 클래스로 추상 클래스이다.
[Network_ex3.java]
[Network_ex4.java]
[Network_ex5.java]

2. 소켓 프로그래밍
 소켓 프로그래밍이란, 소켓을 이용한 통신 프로그래밍을 말한다.
 이때 소켓이란, 프로세스간의 통신에 사용되는 양쪽 끝단(endpoint)을 의미한다.
 
2.1. TCP UDP
 TCP/IP 프로토콜은 이기종 시스템 간의 통신을 위한 표준 프토로콜로 프로토콜의 집합이다.
 OSI 7계층의 전송 계층 transport layer에 해당
 TCP, UDP 모두 TCP/IP 프로토콜
 
 TCP
  연결 기반 1:1 통신 방식
   신뢰성 있는 데이터 전송
   UDP보다 전송 속도가 느림
   데이터의 경계를 구분하지 않음 (byte-stream)
    .Socket, .ServerSocket
 UDP
  비 연결 기반
   신뢰성 없는 
   TCP보다 빠름
   데이터의 경계를 구분함 (datagram)
    .DatagramSocket, .DatagramPacket, .MulticastSocket
[TcpIpServer.java]
[TcpIpClient.java]
[TcpIpServer_th.java]
[TcpIpServer_th2.java]


    
 